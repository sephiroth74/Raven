///////////////////////////////////////////////////////////
//  Handle.as
//  Macromedia ActionScript Implementation of the Class Handle
//  Generated by Enterprise Architect
//  Created on:      01-Apr-2008 8:09:23 AM
//  Original author: alessandro crugnola
///////////////////////////////////////////////////////////

package com.aviary.geom.controls
{
	import com.aviary.events.HandleEvent;
	
	import flash.events.EventDispatcher;
	import flash.geom.Point;

	/**
	 * @author alessandro crugnola
	 * @version 1.0
	 * @created 01-Apr-2008 8:09:23 AM
	 */
	public class Handle extends EventDispatcher implements IHandle
	{
		protected static var count: int = 0;
		
		protected var m_name: String;
		protected var m_point: Point;
		protected var m_type: uint;
		protected var m_uid: String;
		protected var m_index: int;
				
	    /**
	     * Constructor
	     * 
	     * @param handle_name
	     * @param x
	     * @param y
	     * @param type    type
	     */
	    public function Handle( handle_name: String, x: Number, y: Number, type: uint = 1, index: int = 0 )
	    {
			super( null );
			m_uid	= "handle_" + count++;
			m_name	= handle_name;
			m_point	= new Point( x, y );
			m_type 	= type;
			m_index = index;
	    }

	    /**
	     * Get the type of the handle
	     * @see HandleType
	     */
	    public function get type(): uint
	    {
	    	return m_type;
	    }

	    public function get point(): Point
	    {
	    	return m_point;
	    }

	    /**
	     * 
	     * @param value    value
	     */
	    public function set point( value: Point ): void
	    {
	    	setPoint( value, true );
	    }

	    /**
	     * Set a point but ask if an event should be dispatched
	     * 
	     * @param value
	     * @param handleEvent    handleEvent
	     */
	    public function setPoint( value: Point, handleEvent: Boolean = true, handleUpdate: Boolean = true ): void
	    {
			var old_point: Point = m_point.clone( );
			m_point.x = value.x;
			m_point.y = value.y;
			
			if( handleEvent )
				dispatchEvent( new HandleEvent( HandleEvent.HANDLE_CHANGE, old_point ) );

			if( handleUpdate )			
				dispatchEvent( new HandleEvent( HandleEvent.HANDLE_UPDATE, old_point ) );
	    }

	    /**
	     * Return the handle internal uid
	     */
	    public function get name( ): String
	    {
	    	return m_name;
	    }
	    
	    public function get uid( ): String
	    {
	    	return m_uid;
	    }

	}//end Handle

}